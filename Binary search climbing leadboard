#include <iostream>
#include <vector>
using namespace std;
int rp(vector<int>a,int s,int e,int target)
{
    int index=-1,mid;
    while(s<=e)
    {
        mid=(s+e)/2;
        if(a[mid]==target)
        {
          index=mid+1;
          cout<<index<<endl;
          return 0;  
        }
        if(a[mid]<target)
        {
            e=mid-1;
        }
        else
        {
            s=mid+1;
        }
    }
    index=s+1;
    cout<<index<<endl;
    return 0;
}
int main()
{
    int n;
    cin>>n;
    // int *r=(int *)malloc(sizeof(int)*n);
    //  r=(int *)calloc(n,sizeof(int));
    //  r=(int *)realloc(r,sizeof(int)*(n*n));
    vector<int>r(n);
    for(int i=0;i<n;i++)
    {
        // int val;
        // cin>>val;
        // r.push_back(val);
        cin>>r[i];
    }
    // int *unique=(int *)malloc(sizeof(int)*n);
    //  unique=(int *)calloc(n,sizeof(int));
    //  unique=(int *)realloc(unique,sizeof(int)*(n*n));
    vector<int>unique;
    const int max=200000;
    vector<bool> seen(max, false);
    for(auto num :r)
    {
        if(!seen[num])
        {
            // unique.push_back(num);
            unique.push_back(num);
            seen[num]=true;
        }
    }
    int m;
    cin>>m;
    // int *player=(int *)malloc(sizeof(int)*m);
    //  player=(int *)calloc(m,sizeof(int));
    //  player=(int *)realloc(player,sizeof(int)*(m*m));
    vector<int>player(m);
    for(int i=0;i<m;i++)
    {
        // int val;
        // cin>>val;
        // player.push_back(val);
        cin>>player[i];
        rp(unique,0,unique.size()-1,player[i]);
    }
    
    
}











